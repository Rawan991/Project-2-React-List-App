{"version":3,"sources":["Components/AddNewLiteraure.js","Components/LinesOfAuthor.js","Components/Readit.js","Components/Literature.js","Components/About.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["AddNewLiterature","props","handleChangeInputText","e","console","log","target","value","setState","term","handleChangeTextarea","object","state","class","className","for","id","type","placeholder","this","onChange","name","to","onClick","addNewItem","React","Component","LinesOfAuthor","literaturelines","map","lines","title","Readit","clickRemoveOne","deletedbook","deleteSelect","favorirestitle","faves","oneBookTitle","i","handleRemover","clickToRemoveAll","Literature","inputSearchChange","textValue","searchOfTitle","handleSearch","filteredLiteratureBook","literatureBook","filter","toLowerCase","includes","toFiltervalue","literatureBooks","titles","author","handleFaveToggle","About","HomePage","App","newFilterArra","slice","indexOf","t","titlesIndex","splice","newTitleTerm","newObjectTerm","handelCheckbox","checkes","favebook","axios","method","url","then","succ","data","catch","error","exact","path","component","addToFav","clickToRemoveOne","handlechangeToggle","toRemoveItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0c0d9204.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class AddNewLiterature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n      object: \"\"\n    };\n  }\n\n  handleChangeInputText = e => {\n    console.log(\"On Text Change\", e.target.value);\n    this.setState({\n      term: e.target.value\n    });\n  };\n  handleChangeTextarea = e => {\n    console.log(\"On Text Change\", e.target.value);\n    this.setState({\n      object: e.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div class=\"form-group\">\n          <label className=\"TitleOfInput\" for=\"formGroupExampleInput\">\n            {\" \"}\n            Add New Title{\" \"}\n          </label>\n\n          <input\n            className=\"form-control\"\n            id=\"addtitle\"\n            type=\"text\"\n            placeholder=\"Literature Title\"\n            value={this.state.term}\n            onChange={this.handleChangeInputText}\n          />\n\n          <label className=\"TitleOfInput\" for=\"comment\">\n            {\" \"}\n            Write Literature :\n          </label>\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            id=\"comment\"\n            name=\"Literature\"\n            value={this.state.object}\n            onChange={this.handleChangeTextarea}\n          />\n          <Link to=\"/Literature\">\n            <input\n              className=\"submit\"\n              type=\"submit\"\n              value=\"Post\"\n              onClick={() =>\n                this.props.addNewItem(this.state.term, this.state.object)\n              }\n            />\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\n\n\nexport default class LinesOfAuthor extends React.Component {\n\n\n    render() {\n        let literaturelines = this.props.literaturelines.map((lines) => {\n\n            return (\n                <div>\n                    <h1>\n                        {lines.title}\n                    </h1>\n                    <p>\n                        {lines.lines}\n                    </p>\n                </div>\n            )\n        })\n        return (\n            <div>\n\n                <fieldset>{literaturelines} </fieldset>\n            </div>\n\n        )\n\n\n\n    }\n}","import React from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/core/icon\";\n\nimport LinesOfAuthor from \"./LinesOfAuthor\";\nimport Literature from \"./Literature\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class Readit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteSelect: []\n      // checked: false\n    };\n  }\n  clickRemoveOne = e => {\n    console.log(\"Hi\");\n    this.props.deletedbook();\n  };\n\n  render() {\n    const favorirestitle = this.props.faves.map((oneBookTitle, i) => {\n      return (\n        <div className=\"titleofLit\">\n          {/* <input\n                  type=\"button\"\n                  name=\"oneBookTitle\"\n                  value={this.props.checkes}\n                  onChange={e => this.props.handlechangeToggle(e)}\n                /> */}\n\n          {/* <input\n                type=\"button\"\n                value=\"click\"\n                onClick={() => this.state.clickRemoveOne}\n              /> */}\n          {/* Select to delete{\" \"}\n              </input> */}\n          <Link to=\"/LinesOfAuthor\"> {oneBookTitle}</Link>\n          <button onClick={() => this.props.handleRemover(oneBookTitle)}>\n            Remove\n          </button>\n        </div>\n      );\n    });\n    return (\n      <div>\n        {favorirestitle}\n        <button onClick={() => this.props.clickToRemoveAll()}>Clear All</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AddNewLiterature from \"./AddNewLiteraure\";\nimport LinesOfAuthor from \"./LinesOfAuthor\";\nimport Readit from \"./Readit\";\n\nexport default class Literature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchOfTitle: \"\"\n    };\n  }\n  inputSearchChange = e => {\n    // e.preventDefault();\n    const textValue = e.target.value;\n    // console.log('hi', textValue)\n    this.setState({\n      searchOfTitle: textValue\n    });\n  };\n\n  handleSearch = e => {\n    const filteredLiteratureBook = this.props.literatureBook.filter(title => {\n      return title.title\n        .toLowerCase()\n        .includes(this.state.searchOfTitle.toLowerCase());\n    });\n\n    this.props.toFiltervalue(filteredLiteratureBook);\n  };\n\n  render() {\n    let literatureBooks = this.props.literatureBook.map((titles, i) => {\n      return (\n        <div>\n          <li className=\"titleofLits\">\n            <Link to={`/LinesOfAuthor/${titles.author}`}>{titles.title} </Link>\n          </li>\n          <button\n            onClick={() => {\n              this.props.handleFaveToggle(titles.title);\n              //    this.props.addToFav(titles.title);\n            }}\n          >\n            Read it\n          </button>\n       \n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <p className={\"paragraphLi\"}>\n          {\" \"}\n          There’s no doubt that Shakespeare has influenced English literature\n          enormously,\n          <br />\n          from his impact on other authors, his addition of thousands of words\n          and phrases to the language, and the continued reinterpretation of his\n          plots, again and again.\n          <br />\n          In this section of the site, we go beyond Shakespeare to look at\n          English literature more broadly. We explore how we use the English\n          language, and delve into the very best writers and works in the\n          English language.\n        </p>\n\n        {/* Search title  */}\n        <input\n          className=\"titleSeacrh\"\n          placeholder={\"Search for title\"}\n          type=\"text\"\n          value={this.state.searchOfTitle}\n          onChange={e => this.inputSearchChange(e)}\n        />\n        <button onClick={this.handleSearch}> Search </button>\n\n        <button className=\"AddNew\">\n          {\" \"}\n          <Link to=\"/AddNewLiterature\"> Add New </Link>{\" \"}\n        </button>\n\n        <ul>{literatureBooks}</ul>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class About extends React.Component {\n  render() {\n    return (\n      <div className=\"Aboutit\">\n        <h1> About </h1>\n        <label className=\"parahrapOfAbout\">\n          <ol>\n            <li>Parents: John Shakespeare & Mary Shakespeare (nee Arden).</li>\n            <li>\n              Date of Birth: Generally accepted as 23rd April 1564. Shakespeare\n              was baptised on 26th April, 1564.\n            </li>\n            <li>Wife: Anne Hathaway (married 1582).</li>\n            <li>\n              Children: Susanna (born 1583), Hamnet & Judith (twins, born 1585).\n            </li>\n            <li>\n              Resided: Born and raised in Stratford-Upon-Avon. Prime working\n              years spent away from family in London. Returned to family in\n              Stratford-Upon-Avon upon retirement.\n            </li>\n            <li>Career: Writer, actor, theatre owner and producer.</li>\n            <li>\n              Body of Work: 37 plays. 149 sonnets. 2 long narrative poems.\n            </li>\n            <li>\n              Died: 23 April 1616, aged 52. Buried at Holy Trinity Church in\n              Stratford-upon-Avon.\n            </li>\n          </ol>\n        </label>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class HomePage extends React.Component {\n  render() {\n    return (\n    <div>\n      <h3>Wilcome to Literature of William Shakespeare </h3>\n    </div>\n    )\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  HashRouter,\n  Link\n} from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport AddNewLiterature from \"./Components/AddNewLiteraure\";\nimport LinesOfAuthor from \"./Components/LinesOfAuthor\";\nimport Literature from \"./Components/Literature\";\nimport About from \"./Components/About\";\nimport Readit from \"./Components/Readit\";\nimport HomePage from \"./Components/Home\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: [],\n      faves: [],\n      checkes: false\n    };\n  }\n\n  toFiltervalue = newFilterArra => {\n    this.setState({\n      author: newFilterArra\n    });\n  };\n  // add title to fave page\n  handleFaveToggle = title => {\n    let faves = this.state.faves.slice();\n    let titleIndex = faves.indexOf(title);\n\n    if (titleIndex === -1) {\n      this.setState({\n        faves: [...this.state.faves, title]\n      });\n      console.log(`Adding To Read it `);\n    }\n  };\n  handleRemover = t => {\n    let faves = this.state.faves.slice();\n    let titlesIndex = faves.indexOf(t);\n    console.log(t, titlesIndex);\n\n    if (titlesIndex !== -1) {\n      faves.splice(titlesIndex, 1);\n      this.setState({\n        faves\n      });\n    }\n    console.log(`Removing From Read it `);\n  };\n\n  // to add new title and object\n  addNewItem = (newTitleTerm, newObjectTerm) => {\n    this.setState({\n      author: [\n        ...this.state.author,\n        { title: newTitleTerm, lines: newObjectTerm }\n      ]\n    });\n  };\n  //to Clear all fave\n  clickToRemoveAll = () => {\n    console.log(\"remove\");\n\n    this.setState({\n      faves: []\n    });\n  };\n\n  handelCheckbox = title => {\n    console.log(\"hi\");\n    title.checkes = !title.checkes;\n    console.log(title);\n  };\n\n  deletedbook = () => {\n    console.log(this.state.faves);\n    const favebook = this.state.faves.filter(e => !e.checkes);\n    this.setState({\n      faves: favebook\n    });\n  };\n\n  // use  axios to get title and liens\n  componentDidMount() {\n    axios({\n      method: \"get\",\n      url: \"http://poetrydb.org/author/William%20Shakespeare\"\n    })\n      .then(succ => {\n        console.log(succ, \"succ\");\n        console.log(succ.data, \"succ.data\");\n\n        this.setState({\n          author: succ.data\n        });\n        console.log(this.state.author, \"author\");\n      })\n      .catch(error => {\n        console.log(error, \"error\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <header>William Shakespeare</header>\n        </div>\n\n        <Router>\n          <div className=\"classes.root\">\n            <nav className=\"navbar navbar-dark bg-dark\">\n              <Link to=\"/Home\">Home</Link>\n              <Link to=\"/Literature\">Literature</Link>\n\n              {/* <Link to='/LinesOfAuthor'>LinesOfAuthor</Link> */}\n\n              <Link to=\"/About\">About</Link>\n\n              <Link to=\"/Readit\"> Readit</Link>\n            </nav>\n            <Route exact path=\"/Home\" component={HomePage} />\n\n            <Route\n              path=\"/AddNewLiterature\"\n              component={() => (\n                <AddNewLiterature addNewItem={this.addNewItem} />\n              )}\n            />\n\n            <Route\n              path=\"/Literature\"\n              component={() => (\n                <Literature\n                  literatureBook={this.state.author}\n                  handleFaveToggle={this.handleFaveToggle}\n                  addToFav={this.addToFav}\n                  clickToRemoveAll={this.clickToRemoveAll}\n                  toFiltervalue={this.toFiltervalue}\n                  handleRemover={this.handleRemover}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/LinesOfAuthor\"\n              component={() => (\n                <LinesOfAuthor literaturelines={this.state.author} />\n              )}\n            />\n            <Route\n              path=\"/Readit\"\n              component={() => (\n                <Readit\n                  faves={this.state.faves}\n                  handelCheckbox={this.handelCheckbox}\n                  handleFaveToggle={this.handleFaveToggle}\n                  clickToRemoveAll={this.clickToRemoveAll}\n                  clickToRemoveOne={this.clickToRemoveOne}\n                  handlechangeToggle={this.handlechangeToggle}\n                  checkes={this.state.checkes}\n                  toRemoveItem={this.toRemoveItem}\n                  deletedbook={this.deletedbook}\n                  handleRemover={this.handleRemover}\n                />\n              )}\n            />\n\n            <Route path=\"/About\" component={About} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}