{"version":3,"sources":["Components/AddNewLiteraure.js","Components/LinesOfAuthor.js","Components/Favorites.js","Components/Literature.js","Components/About.js","Components/Home.js","App.js","serviceWorker.js","index.js"],"names":["AddNewLiterature","props","handleChangeInputText","e","console","log","target","value","setState","term","handleChangeTextarea","object","state","type","placeholder","this","onChange","name","rows","cols","onClick","addNewItem","React","Component","LinesOfAuthor","literaturelines","map","lines","title","Favorites","deleteSelect","checked","faves","oneBookTitle","i","checkes","deletedbook","clickToRemoveAll","Literature","inputSearchChange","textValue","searchOfTitle","handleSearch","filteredLiteratureBook","literatureBook","filter","mama","toLowerCase","includes","toFiltervalue","literatureBooks","titles","key","to","handleFaveToggle","className","About","src","process","alt","HomePage","App","toRemoveItem","newItemArra","temp","slice","itemID","find","splice","newFilterArra","author","indexOf","newTitleTerm","newObjectTerm","book","titleIndex","axios","method","url","then","succ","data","catch","error","exact","path","component","addToFav","clickToRemoveOne","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.39b95ed8.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class AddNewLiterature extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            term: \"\",\n            object: \"\"\n        }\n    }\n\n\n    handleChangeInputText = (e) => {\n        console.log('On Text Change', e.target.value);\n        this.setState({\n            term: e.target.value\n        });\n    }\n    handleChangeTextarea = (e) => {\n        console.log('On Text Change', e.target.value);\n        this.setState({\n            object: e.target.value\n        });\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n\n                <input type=\"text\" placeholder=\"Literature Title\" value={this.state.term}\n                    onChange={this.handleChangeInputText} />\n\n                <br></br>\n                <br></br>\n                <textarea name=\"Literature\" rows='10' cols='30' value={this.state.object}\n                    onChange={this.handleChangeTextarea} />\n                <br></br>\n                <br></br>\n\n                <input type=\"button\" value=\"Post\" onClick={() =>\n                    this.props.addNewItem(this.state.term, this.state.object)}\n                >\n                </input>\n\n            </div >\n        )\n\n    }\n}\n\n\n","import React from 'react'\n\n\n\nexport default class LinesOfAuthor extends React.Component {\n\n\n    render() {\n        let literaturelines = this.props.literaturelines.map((lines) => {\n\n            return (\n                <div>\n                    <h1>\n                        {lines.title}\n                    </h1>\n                    <p>\n                        {lines.lines}\n                    </p>\n                </div>\n            )\n        })\n        return (\n            <div>\n\n                <fieldset>{literaturelines} </fieldset>\n            </div>\n\n        )\n\n\n\n    }\n}","import React from \"react\";\n\nexport default class Favorites extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deleteSelect: [],\n      checked: false\n    };\n  }\n  // //to Remove select item\n  // clickRemoveOne = e => {\n  //   console.log(e.target.checked);\n  //   //   //this.state.checkes\n  //   console.log(e);\n  //   const faves = this.props.faves.slice();\n  //   const titleIndex = faves.indexOf(e);\n  //   console.log(faves);\n  //   console.log(titleIndex);\n  //   if (titleIndex !== -1) {\n  //     faves.splice(titleIndex, 1);\n  //   }\n  //   this.setState({\n  //     deleteSelect: faves\n  //   });\n  // };\n\n  render() {\n    return (\n      <div>\n        {this.props.faves.map((oneBookTitle, i) => {\n          return (\n            <div>\n              <input\n                type=\"checkbox\"\n                name=\"oneBookTitle\"\n                value={this.props.checkes}\n                // onChange={this.props.clickToRemoveOne}\n              />\n              <button onClick={() => this.props.deletedbook()}>\n                Select to delete{\" \"}\n              </button>\n              {oneBookTitle}\n            </div>\n          );\n        })}\n\n        <button onClick={() => this.props.clickToRemoveAll()}> Clear </button>\n\n        <br></br>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport AddNewLiterature from \"./AddNewLiteraure\";\nimport LinesOfAuthor from \"./LinesOfAuthor\";\nimport Favorites from \"./Favorites\";\n\nexport default class Literature extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchOfTitle: \"\"\n    };\n  }\n  inputSearchChange = e => {\n    // e.preventDefault();\n    const textValue = e.target.value;\n    // console.log('hi', textValue)\n    this.setState({\n      searchOfTitle: textValue\n    });\n  };\n\n  handleSearch = e => {\n    const filteredLiteratureBook = this.props.literatureBook.filter(mama => {\n      return mama.title\n        .toLowerCase()\n        .includes(this.state.searchOfTitle.toLowerCase());\n    });\n\n    this.props.toFiltervalue(filteredLiteratureBook);\n  };\n\n  render() {\n    let literatureBooks = this.props.literatureBook.map((titles, key) => {\n      return (\n        <div>\n          <li>\n            <Link to={`/LinesOfAuthor/${key.title}`}>{titles.title} </Link>\n          </li>\n          <button\n            onClick={() => {\n              this.props.handleFaveToggle(titles.title);\n              //    this.props.addToFav(titles.title);\n            }}\n          >\n            Fave\n          </button>\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        <p>\n          {\" \"}\n          There’s no doubt that Shakespeare has influenced English literature\n          enormously, from his impact on other authors, his addition of\n          thousands of words and phrases to the language, and the continued\n          reinterpretation of his plots, again and again. In this section of the\n          site, we go beyond Shakespeare to look at English literature more\n          broadly. We explore how we use the English language, and delve into\n          the very best writers and works in the English language.\n        </p>\n\n        {/* Search title  */}\n        <input\n          placeholder={\"serch Here of title\"}\n          type=\"text\"\n          value={this.state.searchOfTitle}\n          onChange={e => this.inputSearchChange(e)}\n        />\n\n        <button onClick={this.handleSearch}> Search </button>\n\n        <button className=\"AddNew\">\n          {\" \"}\n          <Link to=\"/AddNewLiterature\"> Add New </Link>{\" \"}\n        </button>\n\n        <ul>{literatureBooks}</ul>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nexport default class About extends React.Component {\n    render() {\n        return (\n            <div className=\"Aboutit\">\n\n\n                <h1> About it </h1>\n                <img className=\"wil\" src={process.env.PUBLIC_URL + 'Shakespeare.jpg'} alt=\"\" />\n                <label>\n                    <ol>\n                        <li>\n                            Parents: John Shakespeare & Mary Shakespeare (nee Arden).\n                </li>\n                        <li>\n                            Date of Birth: Generally accepted as 23rd April 1564. Shakespeare was baptised on 26th April, 1564.\n                </li>\n                        <li>\n                            Wife: Anne Hathaway (married 1582).\n                    </li>\n                        <li>\n                            Children: Susanna (born 1583), Hamnet & Judith (twins, born 1585).\n                    </li>\n                        <li>\n                            Resided: Born and raised in Stratford-Upon-Avon. Prime working years spent away from family in London. Returned to family in Stratford-Upon-Avon upon retirement.\n    \n                    </li>\n                        <li>\n                            Career: Writer, actor, theatre owner and producer.\n                    </li>\n                        <li>\n                            Body of Work: 37 plays. 149 sonnets. 2 long narrative poems.\n                    </li>\n                        <li>\n                            Died: 23 April 1616, aged 52. Buried at Holy Trinity Church in Stratford-upon-Avon.\n                    </li>\n                    </ol>\n                </label>\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nexport default class HomePage extends React.Component {\n  render() {\n    return (\n    <div>\n\n/</div>\n    )\n      // <div id=\"forStyles\">\n      //   <img\n      //     className=\"forStyle\"\n      //     src={process.env.PUBLIC_URL + \"/William-Shakespeare.jpg\"}\n      //   />\n\n      //   <img className=\"forStyle\" src={process.env.PUBLIC_URL + \"/1.jpg\"} />\n\n      //   <img className=\"forStyle\" src={process.env.PUBLIC_URL + \"/2.jpg\"} />\n      // </div>\n    \n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport AddNewLiterature from \"./Components/AddNewLiteraure\";\nimport LinesOfAuthor from \"./Components/LinesOfAuthor\";\nimport Literature from \"./Components/Literature\";\nimport About from \"./Components/About\";\nimport Favorites from \"./Components/Favorites\";\nimport HomePage from \"./Components/Home\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: [],\n      faves: [],\n      checkes: false\n    };\n  }\n  toRemoveItem = newItemArra => {\n    let temp = this.state.faves.slice();\n    const itemID = temp.find(newItemArra);\n    //   const titleIndex = faves.indexOf(e)\n    console.log(temp);\n    console.log(itemID);\n\n    temp.splice(itemID, 1);\n\n    this.setState({\n      faves: temp\n    });\n  };\n\n  toFiltervalue = newFilterArra => {\n    this.setState({\n      author: newFilterArra\n    });\n  };\n  // add title to fave page\n  handleFaveToggle = title => {\n    let faves = this.state.faves.slice();\n    let titleIndex = faves.indexOf(title);\n\n    if (titleIndex === -1) {\n      this.setState({\n        faves: [...this.state.faves, title]\n      });\n      console.log(`Adding To Favors`);\n    }\n  };\n  // to add new title and object\n  addNewItem = (newTitleTerm, newObjectTerm) => {\n    this.setState({\n      author: [\n        ...this.state.author,\n        { title: newTitleTerm, lines: newObjectTerm }\n      ]\n    });\n  };\n  //to Clear all fave\n  clickToRemoveAll = () => {\n    console.log(\"remove\");\n\n    this.setState({\n      faves: []\n    });\n  };\n\n  //to Remove select item\n\n  // to Remove select item\n\n  // clickToRemoveOne = (e, Removeone) => {\n  //   console.log(e.target.checkes);\n  //   //this.state.checkes\n  //   console.log(e);\n  //   const faves = this.state.faves.slice();\n  //   const titleIndex = faves.indexOf(Removeone);\n\n  //   console.log(faves);\n  //   console.log(titleIndex);\n  //   if (titleIndex !== -1) {\n  //     faves.splice(titleIndex, 1);\n\n  //   this.setState({\n  //     faves: this.state.faves.filter(vlau => {\n  //       return vlau !== Removeone;\n  //     })\n  //   });\n  // };}\n\n  deletedbook = book => {\n    const faves = [...this.state.faves];\n    const titleIndex = faves.indexOf(book);\n    if (titleIndex !== -1) {\n      faves.splice(titleIndex, 1);\n    } else {\n      console.log(\"not work\");\n    }\n    this.setState({ faves });\n  };\n\n  // use  axios to get title and liens\n  componentDidMount() {\n    axios({\n      method: \"get\",\n      url: \"http://poetrydb.org/author/William%20Shakespeare\"\n    })\n      .then(succ => {\n        console.log(succ, \"succ\");\n        console.log(succ.data, \"succ.data\");\n\n        this.setState({\n          author: succ.data\n        });\n        console.log(this.state.author, \"author\");\n      })\n      .catch(error => {\n        console.log(error, \"error\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <header>William Shakespeare</header>\n        </div>\n\n        <Router>\n          <div>\n            <nav className=\"navbar navbar-dark bg-dark\">\n              <Link to=\"/Home\">Home</Link>\n              <Link to=\"/Literature\">Literature</Link>\n\n              {/* <Link to='/LinesOfAuthor'>LinesOfAuthor</Link> */}\n\n              <Link to=\"/About\">About</Link>\n\n              <Link to=\"/Favorites\"> My Favorites</Link>\n            </nav>\n            <Route exact path=\"/Home\" component={HomePage} />\n\n            <Route\n              path=\"/AddNewLiterature\"\n              component={() => (\n                <AddNewLiterature addNewItem={this.addNewItem} />\n              )}\n            />\n\n            <Route\n              path=\"/Literature\"\n              component={() => (\n                <Literature\n                  literatureBook={this.state.author}\n                  handleFaveToggle={this.handleFaveToggle}\n                  addToFav={this.addToFav}\n                  clickToRemoveAll={this.clickToRemoveAll}\n                  toFiltervalue={this.toFiltervalue}\n                />\n              )}\n            />\n\n            <Route\n              path=\"/LinesOfAuthor\"\n              component={() => (\n                <LinesOfAuthor literaturelines={this.state.author} />\n              )}\n            />\n            <Route\n              path=\"/Favorites\"\n              component={() => (\n                <Favorites\n                  faves={this.state.faves}\n                  handleFaveToggle={this.handleFaveToggle}\n                  clickToRemoveAll={this.clickToRemoveAll}\n                  clickToRemoveOne={this.clickToRemoveOne}\n                  checkes={this.state.checkes}\n                  toRemoveItem={this.toRemoveItem}\n                  deletedbook={this.deletedbook}\n                />\n              )}\n            />\n\n            <Route path=\"/About\" component={About} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}